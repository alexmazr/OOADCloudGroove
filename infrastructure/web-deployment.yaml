apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: web
  name: web
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
    spec:
      volumes:
      - name: upload-data
        persistentVolumeClaim:
          claimName: uploads-uploadservice-statefulset-0
      containers:
      - image: docker.io/charlescqian/cloudgroove-web
        imagePullPolicy: Always
        name: web
        ports:
          - containerPort: 8080
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SONGSERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: songservice.host

          - name: USERSERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: userservice.host

          - name: UPLOADSERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: uploadservice.host
          - name: SONGSERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: songservice.port

          - name: USERSERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: userservice.port

          - name: UPLOADSERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: cloudgroove-config
                key: uploadservice.port
        volumeMounts:
        - name: upload-data
          mountPath: /localUploads
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: default
spec:
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30000
  selector:
    app: web
  type: LoadBalancer
